@model EduFeedback.Web.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
    Layout = null;
}
<link href="~/Bundle/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/signin.css" rel="stylesheet" />

@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-signin", role = "form" }))
{
    @Html.HiddenFor(m => m.Code)
    @Html.AntiForgeryToken()
    <h4>Reset your password.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Code)

    <div class="form-group">
        @if (@ViewBag.SuccessMessage != null && @ViewBag.SuccessMessage != "")
        {<h7 class="text-center" style="color:#78BC43">@ViewBag.SuccessMessage</h7>
    }

        @if (@ViewBag.ErrorMessage != null && @ViewBag.ErrorMessage != "")
        {<h7 class="text-center" style="color:red">@ViewBag.ErrorMessage</h7>
    }
    </div>

    @Html.LabelFor(m => m.Password, new { @class = "col-md-6 control-label" })
    @Html.PasswordFor(model => model.Password, new { @class = "form-control", autocomplete = "off", type = "text", placeholder = "Enter password" })
    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-6 control-label" })
    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", autocomplete = "off", type = "text", placeholder = "Confirm password" })
    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
    <br />
    <input type="submit" class="btn btn-primary" value="Reset" />
    @*<div class="form-group">

            <div class="col-md-10">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })

                @Html.PasswordFor(model => model.Password, new { @class = "form-control", autocomplete = "off", type = "text", placeholder = "Enter password" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", autocomplete = "off", type = "text", placeholder = "Confirm password" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Reset" />
            </div>
        </div>*@
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
