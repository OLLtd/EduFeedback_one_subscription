@using EduFeedback.Web.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = null;
}
<link href="~/Bundle/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
@*<link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@
<link href="~/Content/signin.css" rel="stylesheet" />


@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-signin text-center", role = "form" }))
{
    <h2><strong>eduFeedback</strong></h2>
    <h1 class="h3 mb-3 font-weight-normal">Please sign in</h1>

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.LabelFor(m => m.Email, new { @class = "sr-only" })
    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email address" })
    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    @Html.LabelFor(m => m.Password, new { @class = "sr-only" })
    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

    <div class="inputView input-effect forgottenText" style="text-align:right;"><a href="/Account/ForgotPassword">Forgotten your password?</a></div>
    
    <div  class="inputView input-effect forgottenText" style="text-align:right;"><a href="#">Register & Subscribe</a></div>
    <br />
    <button class="btn btn-lg btn-primary btn-block" type="submit">Login</button>

    <hr />
    <p class="tri-id">nft@gmail.com</p>
    <p class="tri-pwd">nft@1234</p>
    @*<span class="tri-pwd"><p class="tri-id">admin@gmail.com</p>  / <label class="tri-pwd">admin@1234</label> </span>
        <span class="tri-pwd"><p class="tri-id">nft@gmail.com</p>  / <label class="tri-pwd">nft@1234</label> </span>*@
}



<!--<div class="row">
    <!--<div class="col-md-8">
        <section id="loginForm">
            using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { class = "form-horizontal", role = "form" }))
            {
                Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />

                <div class="form-group">

                    <div class="col-md-10">
                    </div>
                </div>
                <div class="form-group">

                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            Html.CheckBoxFor(m => m.RememberMe)
                            Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>-->
<!--@*<p>
        @Html.ActionLink("Register as a new user", "Register")
    </p>*@
@* Enable this once you have account confirmation enabled for password reset functionality
    <p>
        @Html.ActionLink("Forgot your password?", "ForgotPassword")
    </p>*@-->
<!--<!--}
    </section>
</div>-->
<!--<div class="col-md-4">
    <section id="socialLoginForm">-->
@*@Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/javascript">
        // window.history.go(-1);
        //alert('load')
        //$(document).ready(function () {
        //   // alert('load')
        //    $('.tri-pwd').click(function () {
        //        alert($(this).find('.tri-id').val())
        //    });
        //});
    </script>
}